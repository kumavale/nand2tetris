
function Screen.init 2
push constant 16384
pop static 0
push constant 1
neg
pop static 2
push constant 0
pop local 0
push constant 1
pop local 1
push constant 16
call Array.new 1
pop static 1
label whilebegin0
push local 0
push constant 16
lt
not
if-goto whileend0
push local 0
push static 1
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto whilebegin0
label whileend0
push constant 0
return

function Screen.clearScreen 1
push constant 0
pop local 0
label whilebegin1
push local 0
push constant 8192
lt
not
if-goto whileend1
push local 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto whilebegin1
label whileend1
push constant 0
return

function Screen.setColor 0
push argument 0
pop static 2
push constant 0
return

function Screen.drawPixel 3
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 1
push local 1
push static 1
add
pop pointer 1
push that 0
pop local 2
push static 2
not
if-goto else2
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 2
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto ifend2
label else2
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 2
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label ifend2
push constant 0
return

function Screen.drawLine 8
push argument 3
push argument 1
sub
call Math.abs 1
push argument 2
push argument 0
sub
call Math.abs 1
gt
pop local 0
push local 0
not
if-goto else3
push argument 0
pop local 7
push argument 1
pop argument 0
push local 7
pop argument 1
push argument 2
pop local 7
push argument 3
pop argument 2
push local 7
pop argument 3
goto ifend3
label else3
label ifend3
push argument 0
push argument 2
gt
not
if-goto else4
push argument 0
pop local 7
push argument 2
pop argument 0
push local 7
pop argument 2
push argument 1
pop local 7
push argument 3
pop argument 1
push local 7
pop argument 3
goto ifend4
label else4
label ifend4
push argument 2
push argument 0
sub
pop local 1
push argument 3
push argument 1
sub
call Math.abs 1
pop local 2
push local 1
push constant 2
call Math.divide 2
pop local 3
push argument 1
pop local 6
push argument 1
push argument 3
lt
not
if-goto else5
push constant 1
pop local 4
goto ifend5
label else5
push constant 1
neg
pop local 4
label ifend5
push argument 0
pop local 5
label whilebegin6
push local 5
push argument 2
lt
not
if-goto whileend6
push local 0
not
if-goto else7
push local 6
push local 5
call Screen.drawPixel 2
pop temp 0
goto ifend7
label else7
push local 5
push local 6
call Screen.drawPixel 2
pop temp 0
label ifend7
push local 3
push local 2
sub
pop local 3
push local 3
push constant 0
lt
not
if-goto else8
push local 6
push local 4
add
pop local 6
push local 3
push local 1
add
pop local 3
goto ifend8
label else8
label ifend8
push local 5
push constant 1
add
pop local 5
goto whilebegin6
label whileend6
push constant 0
return

function Screen.drawRectangle 1
push argument 1
pop local 0
label whilebegin9
push local 0
push argument 3
lt
not
if-goto whileend9
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto whilebegin9
label whileend9
push constant 0
return

function Screen.drawCircle 3
push argument 2
neg
pop local 1
push argument 2
push argument 2
call Math.multiply 2
pop local 2
label whilebegin10
push local 1
push argument 2
gt
not
not
if-goto whileend10
push local 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 0
push argument 0
push local 0
sub
push argument 1
push local 1
add
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto whilebegin10
label whileend10
push constant 0
return
